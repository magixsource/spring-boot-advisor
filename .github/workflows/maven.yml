# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: config setting.xml
      uses: whelk-io/maven-settings-xml-action@v10
      with:
        servers: '[{ "id": "geek-snapshots", "username": "${{ secrets.GEEK_REPO_USERNAME }}", "password": "${{ secrets.GEEK_REPO_SECRET }}" }]'
    - name: Build by aliyun
      run: mvn -B package -P geek --file pom.xml && cp ./target/*.jar ./app.jar
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.GEEK_DOCKER_USERNAME }}
        password: ${{ secrets.GEEK_DOCKER_PASSWORD }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v2.2.0
      with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          push: true
          tags: |
            magixsource/spring-boot-advisor:latest
            magixsource/spring-boot-advisor:$(date +%s)
      # run: cp ./target/*.jar ./app.jar && docker build . --file Dockerfile --tag spring-boot-advisor:$(date +%s)
